Алгоритм — это пошаговая инструкция для решения задачи, а алгоритмы сортировки упорядочивают данные, в то время как алгоритмы поиска находят конкретные элементы. 
Их сложность измеряет эффективность: временная — время выполнения, а пространственная — используемую память. 
Неэффективные алгоритмы имеют сложность \(O(n^{2})\), а эффективные — \(O(n\log n)\). 
Алгоритмы поиска     Последовательный поиск: Проверяет каждый элемент по порядку, пока не найдет искомый. 
Бинарный поиск: Работает только на отсортированных данных, последовательно деля диапазон поиска пополам. 
Сложность в лучшем случае \(O(\log n)\), в худшем \(O(n)\).            
Алгоритмы сортировки и их сложность     Сортировка пузырьком, вставками, выбором: 
Имеют сложность \(O(n^{2})\), что делает их неэффективными для больших объемов данных.  
Быстрая сортировка: Средняя сложность \(O(n\log n)\), но в худшем случае может достигать \(O(n^{2})\).  
Сортировка слиянием: Сложность \(O(n\log n)\).  Пирамидальная сортировка: Сложность \(O(n\log n)\).  
Сортировка Шелла: Является оптимизированной версией сортировки вставками.            
Ключевые понятия     
Алгоритм: Последовательность точных инструкций для решения задачи.  
Сложность алгоритма: Мера эффективности алгоритма. 
Временная сложность: Как время выполнения зависит от размера входных данных.  
Пространственная сложность: Какой объем памяти требуется алгоритму.  
\(O(n^{2})\) (квадратичная сложность): Алгоритмы, время работы которых растет пропорционально квадрату размера данных (например, сортировка пузырьком). 
\(O(n\log n)\) (логарифмическая линейная сложность): Более эффективные алгоритмы, чем квадратичные, 
для больших наборов данных (например, быстрая сортировка, сортировка слиянием).
